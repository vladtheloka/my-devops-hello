#!/bin/bash
set -e

echo "üîπ Step 0: –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"
docker rm -f myapp_test || true
docker rmi -f myapp:latest || true

# –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
TMP_DIR=$(mktemp -d)
echo "–ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: $TMP_DIR"

echo "üîπ Step 0b: –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ IDE/Devcontainer –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"
for d in .vscode .devcontainer .ansible_cache .pytest_cache; do
    [ -d "$d" ] && echo "–£–¥–∞–ª—è–µ–º $d" && rm -rf "$d"
done

echo "üîπ Step 1: Docker build & test"
docker build -t myapp:latest ./app
echo "Waiting 3s for app to start..."
docker run -d --name myapp_test -p 8080:8080 myapp:latest
sleep 3
curl -s http://localhost:8080/ || echo "‚ö†Ô∏è App did not respond"
docker stop myapp_test && docker rm myapp_test

echo "üîπ Step 2: Ansible lint & playbook"
# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
[ -f ".venv/bin/activate" ] && source .venv/bin/activate

ansible-lint ansible/playbook.yml || echo "‚ö†Ô∏è Ansible-lint failed"
ansible-playbook ansible/playbook.yml || echo "‚ö†Ô∏è Ansible playbook failed"

echo "üîπ Step 3: Terraform check"
terraform -chdir=terraform init -input=false
terraform -chdir=terraform validate
terraform -chdir=terraform fmt -check

echo "üîπ Step 4: Pre-commit checks"
pre-commit run --all-files || echo "‚ö†Ô∏è Pre-commit checks failed"

echo "üîπ Step 5: –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
rm -rf "$TMP_DIR"
echo "‚úÖ –í—Å–µ —à–∞–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã, –ø—Ä–æ–µ–∫—Ç —á–∏—Å—Ç—ã–π!"
